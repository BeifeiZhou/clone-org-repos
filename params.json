{"name":"Clone-org-repos","tagline":"Clone github organization repositories","body":"Clone github organization repos\r\n===\r\n\r\n[![NPM](https://nodei.co/npm/clone-org-repos.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/clone-org-repos/)\r\n[![Build Status](https://travis-ci.org/tegon/clone-org-repos.svg?branch=master)](https://travis-ci.org/tegon/clone-org-repos)\r\n[![Coverage Status](https://coveralls.io/repos/tegon/clone-org-repos/badge.svg?branch=master&service=github)](https://coveralls.io/github/tegon/clone-org-repos?branch=master)\r\n\r\nThis is a tool to clone all repositories from an github organization.\r\nThis could be helpful if you work at some company, or if you contribute to an open source project.\r\n\r\nWhy?\r\n---\r\nI went through this a few times, I need to clone all repositories from the company where I work, and, in the beginning, this line of Ruby code was sufficient:\r\n\r\n```ruby\r\ncurl -s \"https://api.github.com/orgs/ORG_NAME/repos?per_page=100\" -u \"username\" | ruby -rubygems -e 'require \"json\"; JSON.load(STDIN.read).each {|repo| %x[git clone #{repo[\"ssh_url\"]} ]}'\r\n```\r\n\r\nBut things got a little complicated. Some repositories aren't used by me because they are from different times. In this case this tool can be useful because it allows you to pass options to ignore some repositories.\r\n\r\nUsage\r\n---\r\n```bash\r\n  cloneorg [OPTIONS] [ORG]\r\n```\r\n\r\nOptions:\r\n---\r\n```bash\r\n  -p,  --perpage NUMBER number of repos per page (Default is 100)\r\n  -t,  --type STRING    can be one of: all, public, private, forks, sources,\r\n                         member  (Default is all)\r\n  -e,  --exclude STRING   Exclude passed repos, comma separated\r\n  -o,  --only STRING      Only clone passed repos, comma separated\r\n  -r,  --regexp BOOLEAN   If true, exclude or only option will be evaluated as a\r\n                         regexp\r\n  -u,  --username STRING  Username for basic authentication. Required to\r\n                         access github api\r\n       --token STRING     Token authentication. Required to access github api\r\n  -a, --gitaccess         Protocol to use in `git clone` command. Can be `ssh` (default), `https` or `git`\r\n  -s, --gitsettings       Additional parameters to pass to git clone command. Defaults to empty.\r\n       --debug            Show debug information\r\n  -v,  --version          Display the current version\r\n  -h,  --help             Display help and usage details\r\n```\r\n\r\nExamples:\r\n---\r\n\r\nclones all github/twitter repositories, with HTTP basic authentication. A password will be required\r\n\r\n```bash\r\ncloneorg twitter -u GITHUB_USERNAME\r\ncloneorg twitter --username=GITHUB_USERNAME\r\n```\r\n\r\nclones all github/twitter repositories, with an access token provided by Github\r\n\r\n```bash\r\ncloneorg twitter --token GITHUB_TOKEN\r\n```\r\n\r\nIf an environment variable `GITHUB_TOKEN` is set, it will be used.\r\n\r\n```bash\r\nexport GITHUB_TOKEN='YOUR_GITHUB_API_TOKEN'\r\n```\r\n\r\nAdd a -p or --perpage option to paginate response\r\n\r\n```bash\r\ncloneorg mozilla --token=GITHUB_TOKEN -p 10\r\n```\r\n\r\nExclude and Only options\r\n---\r\n\r\nIf you only need some repositories, you can pass -o or --only with their names\r\n\r\n```bash\r\ncloneorg angular --token=GITHUB_TOKEN -o angular\r\n```\r\n\r\nThis can be an array to\r\n\r\n```bash\r\ncloneorg angular --token=GITHUB_TOKEN -o angular,material,bower-angular-i18n\r\n```\r\n\r\nThis can also be an regular expression, with -r or --regexp option set to true.\r\n\r\n```bash\r\ncloneorg marionettejs --token=GITHUB_TOKEN -o ^backbone -r true\r\n```\r\n\r\nThe same rules apply to exclude options\r\n\r\n```bash\r\ncloneorg jquery --token=GITHUB_TOKEN -e css-framework # simple\r\n```\r\n\r\n```bash\r\ncloneorg emberjs --token=GITHUB_TOKEN -e website,examples # array\r\n```\r\n\r\n```bash\r\ncloneorg gruntjs --token=GITHUB_TOKEN -e $-docs -r true # regexp\r\n```\r\n\r\n```bash\r\ncloneorg gruntjs --token=GITHUB_TOKEN -e $-docs -r true --gitaccess=git # Clone using git protocol\r\n```\r\n\r\n```bash\r\n# Clone using git protocol and pass --recurse to `git clone` to clone submodules also\r\ncloneorg gruntjs --token=GITHUB_TOKEN -e $-docs -r true --gitaccess=git --gitsettings=\"--recurse\"\r\n```\r\n\r\nToDo\r\n---\r\n\r\n- Progress bar while cloning repos\r\n","google":"UA-47117243-10","note":"Don't delete this file! It's used internally to help with page regeneration."}